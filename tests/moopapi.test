<?php

/*
 * Tests for Moopapi module.
 */

/**
 * Tests basic Libraries API functions.
 */
class MoopapiMonkeyPatchUnitTestCase extends DrupalUnitTestCase {
  public static function getInfo() {
    return array(
      'name' => 'Moopapi monkey patch unit tests',
      'description' => 'Tests that patchwork library is available and works.',
      'group' => 'Moopapi',
    );
  }

  public function setUp() {
    parent::setUp(array('moopapi'));
    $library = libraries_detect('patchwork');
    // Check Patchwork library.
    if ($this->assertTrue($library, 'Patchwork library is detected')) {
      if (is_array($library) && !empty($library['installed'])) {
        $this->pass('Patchwork library is installed');
        $library = libraries_load('patchwork');
        $this->assertTrue(!empty($library['loaded']), 'Patchwork library is loaded');
      }
      else {
        $message = 'Error while installing Patchwork library';
        if (!empty($library['error'])) {
          $message = 'Library Patchwork is ' . $library['error'];
        }
        if (!empty($library['error message'])) {
          $message .= ': ' . $library['error message'];
        }
        $this->fail($message);
      }
    }
  }

  public function testMonkeyPatch() {
    // Only now we include necessary file to make Patchwork
    // interception work.
    module_load_include('inc', 'moopapi', 'tests/monkey_patch');
    Patchwork\replace("doesMonkeyPatchWork", function()
    {
        return TRUE;
    });
    $this->assertTrue(doesMonkeyPatchWork(), 'Monkey patching works');
  }
}
